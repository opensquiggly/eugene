using Eugene.Blocks;

namespace Eugene.Collections;

public class DiskArrayManager
{
  // /////////////////////////////////////////////////////////////////////////////////////////////
  // Constructors
  // /////////////////////////////////////////////////////////////////////////////////////////////

  public DiskArrayManager(IDiskBlockManager diskBlockManager, int arrayBlockTypeIndex)
  {
    DiskBlockManager = diskBlockManager;
    ArrayBlockTypeIndex = arrayBlockTypeIndex;
  }
  
  // /////////////////////////////////////////////////////////////////////////////////////////////
  // Public Methods
  // /////////////////////////////////////////////////////////////////////////////////////////////

  public IDiskBlockManager DiskBlockManager { get; }

  public int ArrayBlockTypeIndex { get; }
  
  // /////////////////////////////////////////////////////////////////////////////////////////////
  // Public Properties
  // /////////////////////////////////////////////////////////////////////////////////////////////

  public DiskArrayFactory<TData> CreateFactory<TData>(short dataBlockTypeIndex) where TData : struct, IComparable
  {
    return new DiskArrayFactory<TData>(this, dataBlockTypeIndex);
  }
}
