namespace Eugene.Collections.BTree;

public class DiskBTreeManager
{
  // /////////////////////////////////////////////////////////////////////////////////////////////
  // Constructors
  // /////////////////////////////////////////////////////////////////////////////////////////////

  public DiskBTreeManager(IDiskBlockManager diskBlockManager, int btreeBlockTypeIndex)
  {
    DiskBlockManager = diskBlockManager;
  }

  // /////////////////////////////////////////////////////////////////////////////////////////////
  // Public Methods
  // /////////////////////////////////////////////////////////////////////////////////////////////

  public IDiskBlockManager DiskBlockManager { get; }

  // /////////////////////////////////////////////////////////////////////////////////////////////
  // Public Properties
  // /////////////////////////////////////////////////////////////////////////////////////////////

  public DiskBTreeFactory<TKey, TData> CreateFactory<TKey, TData>(short keyBlockTypeIndex, short dataBlockTypeIndex)
    where TKey : struct, IComparable
    where TData : struct, IComparable
  {
    return new DiskBTreeFactory<TKey, TData>(this, keyBlockTypeIndex, dataBlockTypeIndex);
  }  
}
